
# Rodzina modeli LLaMA – przegląd i wymagania sprzętowe (stan na sierpień 2025 r.)

## Wprowadzenie

**LLaMA (Large Language Model Meta AI)** to rodzina dużych modeli językowych udostępnianych przez Meta.  Pierwsza generacja (LLaMA 1) została wydana w 2023 r. jako eksperymentalny model badawczy, natomiast kolejne generacje stopniowo zwiększały liczbę parametrów, okno kontekstowe i możliwości multimodalne.  Meta udostępnia wagi modeli na warunkach licencji **Llama Community License** – umożliwia ona niekomercyjne wykorzystanie i komercyjne wykorzystanie (z wyjątkami dla podmiotów przekraczających 700 mln aktywnych użytkowników miesięcznie), jednak nakłada obowiązek umieszczania wzmianki „Built with Llama” oraz zakazuje wykorzystywania modeli do trenowania konkurencyjnych LLM‑ówhttps://huggingface.co/meta-llama/Meta-Llama-3-8B#:~:text=META%20LLAMA%203%20COMMUNITY%20LICENSE,AGREEMENT.  Modele 3.2 i 4 wprowadzają dodatkowe ograniczenia dotyczące przetwarzania obrazu w Unii Europejskiejhttps://huggingface.co/blog/llama32#:~:text=Regarding%20the%20licensing%20terms%2C%20Llama,products%20with%20the%20vision%20variants i są objęte akceptowalną polityką użycia (Acceptable Use Policy).  

W poniższym zestawieniu zebrano informacje o poszczególnych generacjach LLaMA, w tym dostępne warianty modelu, minimalne wymagania pamięci RAM/VRAM do uruchomienia, licencję, główne zastosowania oraz wybrane wyniki benchmarków.  Dane te są przydatne do projektowania systemów **retrieval‑augmented generation (RAG)** – można na ich podstawie dobrać model do konkretnego zadania, oszacować zasoby sprzętowe oraz uwzględnić ograniczenia licencyjne.

## LLaMA 1 (2023)

LLaMA 1 była pierwszą publicznie dostępną rodziną modeli Mety.  Obejmuje warianty **7 B**, **13 B** i **65 B** parametrów.  Modele te obsługują kontekst ok. 2 k tokenów i były udostępnione wyłącznie na zasadach badawczych.  

* **Liczba parametrów i sprzęt** – wariant 7 B w precyzji FP16 wymaga ok. 12–13 GB pamięci VRAM, natomiast wersje z kwantyzacją (np. 8‑bit lub 4‑bit) można uruchomić na kartach z 6 GB VRAMhttps://www.bacloud.com/en/blog/163/guide-to-gpu-requirements-for-running-ai-models.html#:~:text=LLaMA%20,Meta%20AI.  Model 13 B w pełnej precyzji wymaga ~24 GB VRAM, a kwantyzowany – około 10 GBhttps://www.bacloud.com/en/blog/163/guide-to-gpu-requirements-for-running-ai-models.html#:~:text=LLaMA%20,Meta%20AI.  Największy wariant 65 B potrzebuje ponad 130 GB VRAM i zwykle wymaga wielu kart GPUhttps://www.bacloud.com/en/blog/163/guide-to-gpu-requirements-for-running-ai-models.html#:~:text=LLaMA%20,Meta%20AI.  
* **Licencja i wykorzystanie** – LLaMA 1 była udostępniona w ramach licencji badawczej (Research Use License).  Nie zezwalała ona na komercyjne zastosowania i ograniczała modyfikację i dystrybucję.  Modele te były wykorzystywane głównie do badań nad fine‑tuningiem, adaptacją do zadań dziedzinowych i porównania z modelami OpenAI.

## LLaMA 2 (lipiec 2023)

LLaMA 2 wprowadziła komercyjnie dostępne modele **7 B**, **13 B** i **70 B**.  Modele zostały wytrenowane na dużo większym zbiorze danych i są licencjonowane na zasadach **Llama Community License**.  Licencja pozwala na komercyjne wykorzystanie, ale podmioty posiadające więcej niż 700 mln aktywnych użytkowników miesięcznie muszą uzyskać dodatkową zgodę Metyhttps://deepsense.ai/blog/llama-2-a-significant-milestone-in-the-world-of-ai/#:~:text=The%20Llama%202%20license%C2%A0permits%20any,compliant.  

* **Wymagania sprzętowe** – serwis Hardware Corner podaje, że 7‑miliardowy model w 4‑bitowej kwantyzacji (GPTQ) wymaga **ok. 6 GB VRAM**, a inference na CPU w formacie GGML/GGUF potrzebuje **4 GB RAM i 300 MB VRAM**https://www.hardware-corner.net/llm-database/Llama-2/#:~:text=Below%20are%20the%20Llama,bit%20quantization.  Wariant 13 B wymaga **10 GB VRAM** lub 8 GB RAM (GGML), natomiast model 70 B potrzebuje co najmniej **40 GB VRAM** i 64 GB RAM przy użyciu CPUhttps://www.hardware-corner.net/llm-database/Llama-2/#:~:text=For%2013B%20Parameter%20Models.  
* **Zastosowania** – LLaMA 2 stała się bazą do generowania tekstu, tłumaczeń, asystentów głosowych i systemów RAG.  Dzięki licencji otwartych wag powstały liczne adaptacje, m.in. **Code Llama** (modele do generacji kodu) oraz narzędzia do fine‑tuningu na ograniczonych zasobach.

### Code Llama (sierpień 2023)

Code Llama to wariant LLaMA 2 specjalizujący się w generacji kodu i obsłudze zadań programistycznych.  Modele są dostępne w rozmiarach 7 B, 13 B oraz 30/33/34 B i działają z długim kontekstem (do 100 k tokenów).  

* **Sprzęt** – modele 7 B i 13 B w 4‑bitowej kwantyzacji wymagają odpowiednio **~6 GB** i **~10 GB VRAM**, natomiast warianty ~30 B/34 B potrzebują **ok. 20 GB VRAM**https://www.hardware-corner.net/llm-database/CodeLlama/#:~:text=Hardware%20requirements.  Pliki w formacie GGML (inferencja na CPU) potrzebują 4 GB RAM dla 7 B i ok. 8 GB RAM dla 13 Bhttps://www.hardware-corner.net/llm-database/CodeLlama/#:~:text=When%20running%20CodeLlama%20AI%20models%2C,0GB%20of%20RAM.  
* **Licencja** – Code Llama dziedziczy licencję Llama Community License (podobne zasady jak LLaMA 2).  Modele są wykorzystywane w edytorach kodu, automatyzacji refaktoryzacji, weryfikacji poprawności programów i w agentach programistycznych.

## LLaMA 3 (kwiecień 2024)

Trzecia generacja przyniosła znaczące ulepszenia: zwiększone konteksty, wysoki poziom dokładności, odświeżony tokenizer i bardziej zróżnicowany zbiór danych (7 bln tokenów).  Dostępne modele to **8 B** i **70 B**.  

* **Architektura** – wprowadzono **Grouped Query Attention (GQA)** oraz nowy tokenizer, co poprawia przepływ kontekstu i obsługę dłuższych sekwencji.  
* **Wymagania sprzętowe** – artykuł firmy Picovoice podaje, że model **Llama 3 70 B** w pełnej precyzji potrzebuje **ponad 140 GB VRAM**, a specjalne techniki kwantyzacji (np. 4‑bit) pozwalają uruchomić go na pojedynczym GPU RTX 4090 (24 GB) kosztem wydajnościhttps://picovoice.ai/blog/unleash-the-power-of-llama3-70b-on-your-everyday-computer/#:~:text=family%20ai,uncommon%20and%20can%20be%20expensive.  Analiza Parseur dla wariantu **8 B** wskazuje, że do uruchomienia w chmurze potrzeba GPU z co najmniej **16 GB VRAM** oraz 16 GB RAMhttps://parseur.com/blog/blog-llama3-performance-cost#:~:text=,8B, a model zajmuje ok. 15 GB na dyskuhttps://parseur.com/blog/blog-llama3-performance-cost#:~:text=%2A%20Meta,are%20too%20old%20and%20no.  Raport LiquidMetal AI potwierdza, że 8‑miliardowy model można uruchomić na sprzęcie konsumenckim z 16 GB VRAMhttps://liquidmetal.ai/casesAndBlogs/llama-three-comparison/#:~:text=Pros, natomiast model 70 B wymaga co najmniej 48 GB VRAM w konfiguracji wielo‑GPUhttps://liquidmetal.ai/casesAndBlogs/llama-three-comparison/#:~:text=Pricing.  
* **Licencja** – Llama 3 dziedziczy Llama Community License z obowiązkiem oznaczania modeli i przestrzegania polityki akceptowalnego użycia.  
* **Zastosowania** – LLaMA 3 jest wykorzystywana w asystentach konwersacyjnych, systemach generujących treści i narzędziach RAG.  Dzięki wysokiej wydajności w benchmarkach (np. MMLU, BIG‑BENCH Hard) i efektywnej implementacji GQA, model 8 B jest popularny w aplikacjach on‑device.

## LLaMA 3.1 (lipiec 2024)

Wersja 3.1 wprowadziła modele **8 B**, **70 B** i **405 B**, rozszerzając kontekst do 128 k tokenów i poprawiając stabilność.  Model 405 B należy do największych otwartych modeli udostępnionych przez Metę.  

* **Wymagania VRAM** – oficjalny artykuł z Hugging Face opisuje zapotrzebowanie na pamięć dla różnych precyzji: 
  * **8 B** – w precyzji FP16 wymaga ok. 16 GB VRAM, w FP8 8 GB, a w INT4 4 GBhttps://huggingface.co/blog/llama31#:~:text=Model%20Size%20FP16%20FP8%20INT4,405%20GB%20%20203%20GB. 
  * **70 B** – potrzebuje około **140 GB VRAM** (FP16), **70 GB** (FP8) lub **35 GB** (INT4)https://huggingface.co/blog/llama31#:~:text=Model%20Size%20FP16%20FP8%20INT4,405%20GB%20%20203%20GB.  
  * **405 B** – wymaga **810 GB VRAM** (FP16), **405 GB** (FP8) lub **203 GB** w INT4https://huggingface.co/blog/llama31#:~:text=Model%20Size%20FP16%20FP8%20INT4,405%20GB%20%20203%20GB.  Warto pamiętać, że okno 128 k tokenów powoduje dodatkowy narzut na pamięć – artykuł wskazuje, że przy 128 k tokenów model 70 B potrzebuje dodatkowych ~39 GB VRAM na **cache** kluczy i wartościhttps://huggingface.co/blog/llama31#:~:text=significant%20factor,KV%20cache%20memory%20requirements%20are.  
* **Zastosowania** – LLaMA 3.1 oferuje lepsze wnioskowanie i funkcje kodowania niż LLaMA 3, ale kosztem dużo większych wymagań pamięciowych.  Modele są używane głównie w infrastrukturze chmurowej lub przez firmy dysponujące wydajnymi GPU.

## LLaMA 3.2 (wrzesień 2024)

Ta aktualizacja rozszerzyła rodzinę o lekkie modele **1 B** i **3 B** (tekstowe) oraz warianty multimodalne **Llama 3.2‑Vision 11 B** i **90 B**.  Modele 1 B i 3 B nadal obsługują okna kontekstowe do 128 k tokenów i są trenowane na wielojęzycznym korpusie (angielski, niemiecki, francuski, włoski, portugalski, hindi, hiszpański, tajski)https://huggingface.co/blog/llama32#:~:text=What%20is%20special%20about%20Llama,2%201B%20and%203B.  

* **Sprzęt** – artykuł Hugging Face podaje, że **model 3 B** wymaga **ok. 6,5 GB VRAM** w bf16/fp16, **3,2 GB** w FP8 i **1,75 GB** w INT4; **model 1 B** potrzebuje **2,5 GB** (FP16), **1,25 GB** (FP8) lub **0,75 GB** (INT4)https://huggingface.co/blog/llama32#:~:text=Llama%203,Language%20Models.  Wersja **Vision 11 B** przy 4‑bitowej kwantyzacji używa około **10 GB VRAM**https://huggingface.co/blog/llama32#:~:text=The%20Vision%20models%20are%20larger%2C,bit%20mode.  
* **Licencja** – Llama 3.2 jest objęta tą samą licencją co LLaMA 3.1, z dodatkową klauzulą, że osoby lub firmy z siedzibą w UE nie mogą korzystać z wersji multimodalnych (Vision); to ograniczenie nie dotyczy użytkowników końcowych korzystających z aplikacji zintegrowanych z modelamihttps://huggingface.co/blog/llama32#:~:text=Regarding%20the%20licensing%20terms%2C%20Llama,products%20with%20the%20vision%20variants.  
* **Zastosowania** – dzięki niewielkim rozmiarom modele 1 B i 3 B są przeznaczone do urządzeń mobilnych i wbudowanych.  Modele Vision obsługują tekst i obraz; potrafią rozpoznawać diagramy, tabele i proste elementy wizualne, generując tekstową odpowiedź.

## LLaMA 4 (kwiecień 2025)

Czwarta generacja wprowadza architekturę **Mixture of Experts (MoE)** oraz natywne przetwarzanie multimodalne.  Pierwsze modele to **Llama 4 Scout** i **Llama 4 Maverick**, a w zapowiedzi jest wersja **Llama 4 Behemoth**.  

* **Architektura i kontekst** – w modelach MoE każdy token aktywuje jedynie 17 mld parametrów, mimo że całkowita liczba parametrów jest znacznie większa (Scout ma 109 mld parametrów, 16 ekspertów; Maverick – 400 mld parametrów, 128 ekspertów).  Dzięki temu, przy tej samej liczbie aktywnych parametrów, LLaMA 4 uzyskuje lepszą wydajność niż gęste modele.  Okna kontekstowe są imponujące: **10 mln tokenów dla Scouta** i **1 mln tokenów dla Mavericka**https://ai.meta.com/blog/llama-4-multimodal-intelligence/#:~:text=,class%20performance%20to%20cost.  
* **Wymagania sprzętowe (Scout)** – analiza portalu Hardware Corner wskazuje, że 4‑bitowa wersja **Llama 4 Scout** wymaga **ok. 55–60 GB VRAM** tylko na wagi (bez pamięci podręcznej) i może być uruchomiona na **pojedynczym GPU NVIDIA H100 80 GB**https://gradientflow.com/llama-4-what-you-need-to-know/#:~:text=These%20models%20have%20substantial%20hardware,put%20them%20beyond%20consumer%20GPUs.  Wersja FP16 wymaga nawet **216 GB** zintegrowanej pamięci na komputerach Apple Mac Studio, a kwantyzacja 3‑bitowa zmniejsza wymagania do ~48 GBhttps://www.hardware-corner.net/meta-releases-llama-4-what-hardware/#:~:text=Quantization%20Unified%20Memory%20Needed%20Recommended,fp16%20216%20GB%20M3%20Ultra.  
* **Wymagania sprzętowe (Maverick)** – 4‑bitowa wersja modelu 400 B potrzebuje **245 GB VRAM** oraz systemu z **co najmniej 320 GB RAM** lub kilku kart GPU (np. 8×32 GB)https://www.hardware-corner.net/meta-releases-llama-4-what-hardware/#:~:text=Quantization%20RAM%2FVRAM%20Needed%20Recommended%20Systems,400%20GB%20512GB%20RAM%20server.  Gradient Flow podkreśla, że wariant Maverick wymaga **rozproszonego inferencja** i jest praktycznie nieosiągalny dla użytkowników indywidualnychhttps://gradientflow.com/llama-4-what-you-need-to-know/#:~:text=Llama%204%20Maverick%20.  
* **Licencja** – LLaMA 4 jest udostępniona na tej samej **licencji otwartych wag**, lecz w artykule Gradient Flow wskazuje się, że jest ona nadal restrykcyjna: podmioty o >700 mln użytkowników potrzebują zgody Meta, należy stosować markę „Built with Llama”, przestrzegać polityki akceptowalnego użycia i nie można wykorzystywać modelu do trenowania innych LLM‑ówhttps://gradientflow.com/llama-4-what-you-need-to-know/#:~:text=No,modification%20but%20includes%20significant%20restrictions.  Ponadto z uwagi na przepisy AI Act, wizja w LLaMA 4 może być niedostępna w UEhttps://gradientflow.com/llama-4-what-you-need-to-know/#:~:text=,EU%20due%20to%20regulatory%20concerns.  
* **Wyniki i zastosowania** – Meta podaje, że Llama 4 Scout przewyższa Mistral 3.1 oraz Gemma 3 w zadaniach multimodalnych i oferuje najlepszy stosunek cena–jakość w swojej klasiehttps://ai.meta.com/blog/llama-4-multimodal-intelligence/#:~:text=,class%20performance%20to%20cost.  Llama 4 Maverick ma dorównywać GPT‑4o w benchmarkach reasoningowych, ale wymaga dużej infrastruktury.  Modele te są przeznaczone do tworzenia asystentów multimodalnych (tekst + obraz), zaawansowanych aplikacji RAG z ogromnym kontekstem (kilka milionów tokenów) i systemów budujących agentów z długą pamięcią.

## Podsumowanie tabelaryczne

| Generacja / model | Parametry (aktywnych / całkowitych) | Maks. okno kontekstowe | Minimalne wymagania pamięci (VRAM/RAM – przy kwantyzacji) | Licencja | Przykładowe zastosowania |
|---|---|---|---|---|---|
| **LLaMA 1 (7/13/65 B)** | 7 B, 13 B, 65 B gęste | ok. 2 k tokenów | 7 B: ~12–13 GB VRAM (FP16), 3–6 GB VRAM (4‑bit); 13 B: ~24 GB VRAM; 65 B: >130 GB VRAMhttps://www.bacloud.com/en/blog/163/guide-to-gpu-requirements-for-running-ai-models.html#:~:text=LLaMA%20,Meta%20AI | Badawcza (niekomercyjna) | Badania nad fine‑tuningiem, porównania z GPT | 
| **LLaMA 2 (7/13/70 B)** | gęste | ok. 4 k tokenów | 7 B: 6 GB VRAM (Q4), 4 GB RAM (CPU)https://www.hardware-corner.net/llm-database/Llama-2/#:~:text=Below%20are%20the%20Llama,bit%20quantization; 13 B: 10 GB VRAM; 70 B: 40 GB VRAM i 64 GB RAMhttps://www.hardware-corner.net/llm-database/Llama-2/#:~:text=For%2013B%20Parameter%20Models | Llama Community License (komercyjna z limitem 700 mln użytkowników)https://deepsense.ai/blog/llama-2-a-significant-milestone-in-the-world-of-ai/#:~:text=The%20Llama%202%20license%C2%A0permits%20any,compliant | Generacja i podsumowanie tekstu, asystenci, RAG, fine‑tuning | 
| **Code Llama (7/13/30/34 B)** | gęste | do 100 k tokenów | 7 B: ~6 GB VRAM (Q4); 13 B: 10 GB VRAM; 30/34 B: 20 GB VRAM; 7 B GGML: 4 GB RAMhttps://www.hardware-corner.net/llm-database/CodeLlama/#:~:text=Hardware%20requirementshttps://www.hardware-corner.net/llm-database/CodeLlama/#:~:text=When%20running%20CodeLlama%20AI%20models%2C,0GB%20of%20RAM | Llama Community License | Generacja kodu, autouzupełnianie, refaktoryzacja | 
| **LLaMA 3 (8 B)** | 8 B gęste | 128 k (GQA) | ~16 GB VRAM (FP16); ~8 GB (FP8); ~4 GB (INT4); plik ~15 GBhttps://parseur.com/blog/blog-llama3-performance-cost#:~:text=,8Bhttps://huggingface.co/blog/llama31#:~:text=Model%20Size%20FP16%20FP8%20INT4,405%20GB%20%20203%20GB | Llama Community License | Asystenci konwersacyjni, RAG, on‑device inference | 
| **LLaMA 3 (70 B)** | 70 B gęste | 128 k | ~140 GB VRAM (FP16); ~70 GB (FP8); ~35 GB (INT4); uruchomienie wymaga konfiguracji multi‑GPUhttps://huggingface.co/blog/llama31#:~:text=Model%20Size%20FP16%20FP8%20INT4,405%20GB%20%20203%20GBhttps://liquidmetal.ai/casesAndBlogs/llama-three-comparison/#:~:text=Pricing | jak wyżej | Analiza i generacja tekstu, RAG w chmurze | 
| **LLaMA 3.1 (8/70/405 B)** | 8 B, 70 B, 405 B gęste | 128 k | 8 B: 16 GB VRAM; 70 B: 140 GB; 405 B: 810 GB (FP16)https://huggingface.co/blog/llama31#:~:text=Model%20Size%20FP16%20FP8%20INT4,405%20GB%20%20203%20GB; dodatkowy narzut ~39 GB na cache dla 128 k tokenówhttps://huggingface.co/blog/llama31#:~:text=significant%20factor,KV%20cache%20memory%20requirements%20are | jak wyżej | Zadania wymagające długiego kontekstu; fine‑tuning w infrastrukturze chmurowej | 
| **LLaMA 3.2 (1/3 B tekstowe)** | 1 B, 3 B gęste | 128 k | 3 B: 6,5 GB VRAM (FP16), 3,2 GB (FP8), 1,75 GB (INT4); 1 B: 2,5 GB (FP16), 1,25 GB (FP8), 0,75 GB (INT4)https://huggingface.co/blog/llama32#:~:text=Llama%203,Language%20Models | jak wyżej (multimodalne ograniczone w UE)https://huggingface.co/blog/llama32#:~:text=Regarding%20the%20licensing%20terms%2C%20Llama,products%20with%20the%20vision%20variants | Aplikacje mobilne, wbudowane, RAG na urządzeniach brzegowych | 
| **LLaMA 3.2‑Vision (11 B/90 B)** | 11 B, 90 B multimodalne (tekst + obraz) | 128 k | Wersja 11 B (INT4) wymaga ~10 GB VRAMhttps://huggingface.co/blog/llama32#:~:text=The%20Vision%20models%20are%20larger%2C,bit%20mode; dla 90 B brak publicznych danych, wymaga wielu GPU | jak wyżej, z wyłączeniem UEhttps://huggingface.co/blog/llama32#:~:text=Regarding%20the%20licensing%20terms%2C%20Llama,products%20with%20the%20vision%20variants | Odpowiadanie na pytania dotyczące obrazów, diagramy, tabele | 
| **LLaMA 4 Scout (17 B aktywnych, 16 ekspertów)** | 17 B aktywnych / 109 B całkowitych (MoE) | 10 mln tokenów | ~55–60 GB VRAM (4‑bit)https://gradientflow.com/llama-4-what-you-need-to-know/#:~:text=These%20models%20have%20substantial%20hardware,put%20them%20beyond%20consumer%20GPUs; 61 GB unified memory (4‑bit) na Mac Studiohttps://www.hardware-corner.net/meta-releases-llama-4-what-hardware/#:~:text=Quantization%20Unified%20Memory%20Needed%20Recommended,fp16%20216%20GB%20M3%20Ultra; FP16: 216 GB | Licencja open‑weights z ograniczeniami (700 mln MAU, znak „Built with Llama”, polityka AUP)https://gradientflow.com/llama-4-what-you-need-to-know/#:~:text=No,modification%20but%20includes%20significant%20restrictions | Multimodalni asystenci, długie konteksty, RAG z milionami tokenów | 
| **LLaMA 4 Maverick (17 B aktywnych, 128 ekspertów)** | 17 B aktywnych / 400 B całkowitych | 1 mln tokenów | ~245 GB VRAM (4‑bit) i ≥320 GB RAMhttps://www.hardware-corner.net/meta-releases-llama-4-what-hardware/#:~:text=Quantization%20RAM%2FVRAM%20Needed%20Recommended%20Systems,400%20GB%20512GB%20RAM%20server; wymaga rozproszonej inferencjihttps://gradientflow.com/llama-4-what-you-need-to-know/#:~:text=Llama%204%20Maverick%20 | jak wyżej | Zaawansowane zadania reasoningowe, multimodalne aplikacje klasy Enterprise | 

## Wnioski i rekomendacje

1. **Wybór modelu a dostępne zasoby** – mniejsze modele LLaMA (1 B–8 B) można uruchomić na pojedynczej karcie graficznej z 16 GB VRAM lub nawet na CPU z odpowiednią ilością RAM.  Modele 70 B i większe wymagają środowisk z wieloma GPU i setkami gigabajtów pamięci.  Dla zastosowań RAG w małych firmach rekomendowane są modele 8 B (LLaMA 3) lub 3 B (LLaMA 3.2), które zapewniają dobrą jakość i niskie opóźnienia.
2. **Licencja i obostrzenia** – mimo otwartych wag LLaMA nie jest w pełni open‑source.  Użytkownicy muszą przestrzegać licencji, umieszczać oznaczenie „Built with Llama”, nie wykorzystywać modeli do trenowania innych LLM‑ów i uzyskać zgodę przy liczbie użytkowników >700 mlnhttps://gradientflow.com/llama-4-what-you-need-to-know/#:~:text=No,modification%20but%20includes%20significant%20restrictions.  Modele multimodalne 3.2 i 4 mają dodatkowe ograniczenia w UEhttps://huggingface.co/blog/llama32#:~:text=Regarding%20the%20licensing%20terms%2C%20Llama,products%20with%20the%20vision%20variants.  
3. **Zastosowania RAG** – LLaMA oferuje wydajność i długie konteksty potrzebne do systemów RAG.  Modele 3.1 i 4 mogą obsługiwać kontekst od 128 k do milionów tokenów, co pozwala na wbudowanie dużych baz wiedzy bez konieczności intensywnego indeksowania.  Jednak ich wymagania sprzętowe i koszty eksploatacji są wysokie – w praktyce lepiej zastosować mniejsze warianty (8 B lub 24 B) i wspierać się mechanizmami przycinania kontekstu.
4. **Trendy rozwojowe** – meta zapowiedziała kolejne warianty LLaMA 4 (m.in. **Behemoth** z 288 B aktywnych parametrów) oraz modele reasoningowe i mniejszych rozmiarów (np. 24 B).  Oczekuje się dalszego rozwoju architektur MoE i wysokiej wydajności na układach z połączoną pamięcią (Apple, AMD).  

Niniejszy plik zestawia stan wiedzy na sierpień 2025 r. i może służyć jako baza wiedzy do systemów RAG.  Zaleca się śledzenie aktualizacji licencji i nowych wersji, ponieważ Meta często wprowadza nowe modele lub zmienia warunki użycia.
